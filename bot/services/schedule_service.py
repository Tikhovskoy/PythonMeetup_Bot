from typing import List, Dict, Optional
from datetime import datetime

_FAKE_EVENTS: List[dict] = [
    {
        'time': '12:00',
        'speaker': '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        'topic': 'Python –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏',
        'description': '–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Python –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏.',
    },
    {
        'time': '13:00',
        'speaker': '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
        'topic': '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –≤ Python',
        'description': '–ü—Ä–∞–∫—Ç–∏–∫–∞ asyncio –∏ –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.',
    },
    {
        'time': '14:00',
        'speaker': '',
        'topic': '–ü–∏—Ü—Ü–∞ –∏ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ üçï',
        'description': '–ù–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ –∑–∞ –ø–∏—Ü—Ü–µ–π.',
    },
]

def add_event(event: dict) -> dict:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ (—Ä–∞—Å—à–∏—Ä—è–µ–º–æ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ –∏–ª–∏ –º–∏–≥—Ä–∞—Ü–∏–∏).
    """
    _FAKE_EVENTS.append(event)
    return event

def get_schedule() -> List[dict]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å–æ–±—ã—Ç–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏.
    """
    def parse_time(ev):
        try:
            return datetime.strptime(ev['time'], '%H:%M')
        except Exception:
            return datetime.min
    return sorted(_FAKE_EVENTS, key=parse_time)

def get_event_by_time(time_str: str) -> Optional[dict]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –ø–æ–∏—Å–∫–∞).
    """
    for ev in _FAKE_EVENTS:
        if ev['time'] == time_str:
            return ev
    return None

def clear_events() -> None:
    """
    –û—á–∏—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (–¥–ª—è —Ç–µ—Å—Ç–æ–≤).
    """
    _FAKE_EVENTS.clear()
